"""create tables

Revision ID: 2057154397b2
Revises: 
Create Date: 2024-05-12 18:05:40.168689

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2057154397b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('is_verify', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('customers',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('atomy_id', sa.String(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('atomy_id', 'owner', name='idx_unique_atomy_owner')
    )
    op.create_table('products',
    sa.Column('atomy_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), server_default='0', nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('atomy_id', 'owner', name='idx_unique_atomy_id_owner')
    )
    op.create_table('orders',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('customer_phone', sa.String(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('is_given_out', sa.Boolean(), server_default=sa.text('(false)'), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['owner'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_order_association',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'order_id', name='idx_unique_product_order')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_order_association')
    op.drop_table('orders')
    op.drop_table('products')
    op.drop_table('customers')
    op.drop_table('users')
    # ### end Alembic commands ###
